REFINEMENT SecretaryRef

REFINES MSecretary

SEES
	FundingAgency_structure_Context
	


INCLUDES
	Review,
	Proposal,
		Expert


VARIABLES
	available_experts,
	secretary

INVARIANT
	secretary : POW(ext_Secretary) &
	available_experts : (ext_Secretary --> POW(ext_Expert))

INITIALISATION
	ANY aavailable_experts WHERE
		aavailable_experts : (ext_Secretary --> POW(ext_Expert)) &
		!(av).(av: ext_Secretary => aavailable_experts = {})
	THEN
		available_experts := aavailable_experts
	END
	||
	secretary := {}

OPERATIONS

	get_experts(av) = 
	PRE
		av : ext_Secretary
	THEN
	    skip
    END;

	check_expert(av) = 
	PRE
		av : ext_Secretary
	THEN
        skip
    END;

    number_of_experts <-- search_for_experts(av) = 
	PRE
		av : ext_Secretary
	THEN
		ANY eff1, number_of_experts1 WHERE
			eff1 : POW(ext_Expert) &
			number_of_experts1 : INTEGER &
			#(exps).(exps : POW(ext_Expert) &
				exps = {exp | exp : ext_Expert &
					exp : expert &
					research_area(exp) = computer_science} &
				eff1 = exps &
				number_of_experts1 = card(exps))
		THEN
			available_experts(av) := eff1
			||
			number_of_experts := number_of_experts1
		END
	END;

	dispatch(av, revi) = 
	PRE
		av : ext_Secretary &
		revi : ext_Review
	THEN
		ANY eff1 WHERE
			eff1 : ext_Expert &
			not(available_experts(av) = {}) &
			#(exp).(exp : ext_Expert &
				exp : available_experts(av) &
				area_of_expertise(exp) = area(for_proposal(revi)) &
				eff1 = exp)
		THEN
			set_by_expert({(revi |-> eff1)})
		END
	END

END