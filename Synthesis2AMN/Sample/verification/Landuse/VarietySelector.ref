/* VarietySelector
 * Author: ssa
 * Creation date: 4/9/2024
 */

REFINEMENT VarietySelector
REFINES LanduseDesigner

SEES

    LanduseDesign_Context,
	VarietyParameters
	
INCLUDES
	Field,
	Variety

VARIABLES
	gotVarieties,
	varietiesAreGot,
	suitableVarieties

INVARIANT
	gotVarieties : (ext_VarietySelector --> POW(ext_Variety)) &
	varietiesAreGot : (ext_VarietySelector --> BOOL) &
	suitableVarieties : (ext_VarietySelector --> POW(ext_Variety)) &
	
	cultivars = varieties &
	!(var).(var: ext_Variety => crop(var) = agriculture(var) & soils(var) = soilTypes(var)) &
	!(afield).(afield: ext_Field => 
	    fieldSoil(afield) = soilType(afield) & cultivatedVariety(afield ) = grownCultivar(afield) ) &
	!(sel).(sel: ext_VarietySelector => 
        ( (cropCultivars(sel) = {}) <=> (suitableVarieties(sel) = {}) )	&
        ( (cropCultivars(sel) /= {}) <=> (suitableVarieties(sel) /= {} & gotVarieties(sel) /= {} & varietiesAreGot(sel) = TRUE ) )
    )

INITIALISATION
	ANY agotVarieties WHERE
		agotVarieties : (ext_VarietySelector --> POW(ext_Variety))&
		!(av).((av : ext_VarietySelector =>
			agotVarieties(av) = {}))
	THEN
		gotVarieties := agotVarieties
	END
	||
	ANY avarietiesAreGot WHERE
		avarietiesAreGot : (ext_VarietySelector --> BOOL)&
		!(av).((av : ext_VarietySelector =>
			avarietiesAreGot(av) = FALSE))
	THEN
		varietiesAreGot := avarietiesAreGot
	END
	||
	ANY asuitableVarieties WHERE
		asuitableVarieties : (ext_VarietySelector --> POW(ext_Variety))&
		!(av).((av : ext_VarietySelector =>
			asuitableVarieties(av) = {}))
	THEN
		suitableVarieties := asuitableVarieties
	END

OPERATIONS
	getVarieties(av) = 
	PRE
		av : ext_VarietySelector
	THEN
		ANY eff1, eff2 WHERE
			eff1 : POW(ext_Variety) &
			eff2 : BOOL &
			eff1 = varieties &
			eff2 = TRUE
		THEN
			gotVarieties(av) := eff1
			||
			varietiesAreGot(av) := eff2
		END
	END;

	selectAgricultureVarieties(av, anagriculture) = 
	PRE
		av : ext_VarietySelector &
		anagriculture : ext_Agriculture
	THEN
		ANY eff1 WHERE
			eff1 : POW(ext_Variety) &
			eff1 = {vv | vv : ext_Variety &
				vv : gotVarieties(av) &
				agriculture(vv) = anagriculture}
		THEN
			suitableVarieties(av) := eff1
		END
	END;

	assignVariety(av, afield) = 
	PRE
		av : ext_VarietySelector &
		afield : ext_Field
	THEN
		ANY eff1 WHERE
			eff1 : ext_Variety &
			not(suitableVarieties(av) = {}) &
			#(vp0).(vp0 : ext_VarietyParameters &
				vp0 : varietyParameters &
				variety(vp0) : suitableVarieties(av) &
				fieldSoil(afield) : soils(variety(vp0)) &
				soil(vp0) = fieldSoil(afield) &
				!(vp1).((vp1 : ext_VarietyParameters =>
					(vp1 : varietyParameters &
							variety(vp1) : suitableVarieties(av) &
							fieldSoil(afield) : soils(variety(vp1)) &
							soil(vp1) = fieldSoil(afield) =>
						((yield(vp0)) * (((price(variety(vp0))) - cost(vp0)))) >= ((yield(vp1)) * (((price(variety(vp1))) - cost(vp1))))))) &
				eff1 = variety(vp0))
		THEN
			set_cultivatedVariety({(afield |-> eff1)})
		END
	END

END